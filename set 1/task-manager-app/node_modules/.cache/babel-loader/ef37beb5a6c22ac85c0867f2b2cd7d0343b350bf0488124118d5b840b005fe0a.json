{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nanda\\\\OneDrive\\\\Desktop\\\\frontend_part3\\\\task-manager-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './App.css';\n\n// Priority weight mapping\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PRIORITY_WEIGHTS = {\n  high: 3,\n  medium: 2,\n  low: 1\n};\n\n// Calculate urgency score\nconst calculateUrgencyScore = task => {\n  const deadlineDate = new Date(task.deadline);\n  const currentDate = new Date();\n  const timeDiff = deadlineDate.getTime() - currentDate.getTime();\n  const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  const adjustedDays = daysDiff < 0 ? daysDiff * 10 : Math.max(0.5, daysDiff);\n  return adjustedDays / PRIORITY_WEIGHTS[task.priority];\n};\n\n// Format date\nconst formatDate = dateStr => {\n  const options = {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  };\n  return new Date(dateStr).toLocaleDateString(undefined, options);\n};\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [priorityFilter, setPriorityFilter] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const nodeRefs = useRef({});\n\n  // Fetch and process mock tasks\n  useEffect(() => {\n    const fetchTasks = async () => {\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulated delay\n      const mockTasksData = [{\n        id: 1,\n        title: 'Complete project proposal',\n        deadline: '2025-05-25T10:00:00',\n        priority: 'high'\n      }, {\n        id: 2,\n        title: 'Review team submissions',\n        deadline: '2025-05-21T15:30:00',\n        priority: 'medium'\n      }, {\n        id: 3,\n        title: 'Update documentation',\n        deadline: '2025-05-28T12:00:00',\n        priority: 'low'\n      }, {\n        id: 4,\n        title: 'Prepare client presentation',\n        deadline: '2025-05-19T09:00:00',\n        priority: 'high'\n      }, {\n        id: 5,\n        title: 'Weekly team meeting',\n        deadline: '2025-05-22T14:00:00',\n        priority: 'medium'\n      }, {\n        id: 6,\n        title: 'Budget planning',\n        deadline: '2025-05-30T16:00:00',\n        priority: 'low'\n      }, {\n        id: 7,\n        title: 'Stakeholder report',\n        deadline: '2025-05-18T11:00:00',\n        priority: 'high'\n      }];\n      const processed = mockTasksData.map(task => ({\n        ...task,\n        urgencyScore: calculateUrgencyScore(task)\n      }));\n      setTasks(processed);\n      setLoading(false);\n    };\n    fetchTasks();\n  }, []);\n  const filteredTasks = tasks.filter(task => priorityFilter === 'all' || task.priority === priorityFilter);\n  const sortedTasks = filteredTasks.sort((a, b) => a.urgencyScore - b.urgencyScore);\n\n  // Prepare nodeRefs for CSSTransition\n  useEffect(() => {\n    sortedTasks.forEach(task => {\n      if (!nodeRefs.current[task.id]) {\n        nodeRefs.current[task.id] = /*#__PURE__*/React.createRef();\n      }\n    });\n  }, [sortedTasks]);\n  const isOverdue = deadline => new Date(deadline) < new Date();\n  const urgencyLabel = score => {\n    if (score < 0) return {\n      label: \"Critical\",\n      style: {\n        color: \"red\",\n        fontWeight: \"bold\"\n      }\n    };\n    if (score < 1) return {\n      label: \"Urgent\",\n      style: {\n        color: \"orange\",\n        fontWeight: \"600\"\n      }\n    };\n    if (score < 3) return {\n      label: \"High\",\n      style: {\n        color: \"#d4a200\"\n      }\n    };\n    if (score < 7) return {\n      label: \"Medium\",\n      style: {\n        color: \"blue\"\n      }\n    };\n    return {\n      label: \"Low\",\n      style: {\n        color: \"green\"\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Filter by Priority:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: priorityFilter,\n        onChange: e => setPriorityFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"high\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"low\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        padding: '2rem'\n      },\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TransitionGroup, {\n      className: \"task-list\",\n      children: sortedTasks.map(task => {\n        const urgency = urgencyLabel(task.urgencyScore);\n        return /*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 300,\n          classNames: \"task-item\",\n          nodeRef: nodeRefs.current[task.id],\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: nodeRefs.current[task.id],\n            className: \"task-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                color: isOverdue(task.deadline) ? 'red' : '#333'\n              },\n              children: task.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Deadline: \", formatDate(task.deadline)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [\"Priority: \", task.priority]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: urgency.style,\n              children: [\"Urgency: \", urgency.label]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wd3XH64G8X/7Jd3brXorS1O7eKA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","CSSTransition","TransitionGroup","jsxDEV","_jsxDEV","PRIORITY_WEIGHTS","high","medium","low","calculateUrgencyScore","task","deadlineDate","Date","deadline","currentDate","timeDiff","getTime","daysDiff","Math","ceil","adjustedDays","max","priority","formatDate","dateStr","options","year","month","day","hour","minute","toLocaleDateString","undefined","App","_s","tasks","setTasks","priorityFilter","setPriorityFilter","loading","setLoading","nodeRefs","fetchTasks","Promise","resolve","setTimeout","mockTasksData","id","title","processed","map","urgencyScore","filteredTasks","filter","sortedTasks","sort","a","b","forEach","current","createRef","isOverdue","urgencyLabel","score","label","style","color","fontWeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","textAlign","padding","urgency","timeout","classNames","nodeRef","ref","_c","$RefreshReg$"],"sources":["C:/Users/nanda/OneDrive/Desktop/frontend_part3/task-manager-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport './App.css';\n\n// Priority weight mapping\nconst PRIORITY_WEIGHTS = {\n  high: 3,\n  medium: 2,\n  low: 1\n};\n\n// Calculate urgency score\nconst calculateUrgencyScore = (task) => {\n  const deadlineDate = new Date(task.deadline);\n  const currentDate = new Date();\n  const timeDiff = deadlineDate.getTime() - currentDate.getTime();\n  const daysDiff = Math.ceil(timeDiff / (1000 * 3600 * 24));\n  const adjustedDays = daysDiff < 0 ? daysDiff * 10 : Math.max(0.5, daysDiff);\n  return adjustedDays / PRIORITY_WEIGHTS[task.priority];\n};\n\n// Format date\nconst formatDate = (dateStr) => {\n  const options = {\n    year: 'numeric', month: 'short', day: 'numeric',\n    hour: '2-digit', minute: '2-digit'\n  };\n  return new Date(dateStr).toLocaleDateString(undefined, options);\n};\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [priorityFilter, setPriorityFilter] = useState('all');\n  const [loading, setLoading] = useState(true);\n\n  const nodeRefs = useRef({});\n\n  // Fetch and process mock tasks\n  useEffect(() => {\n    const fetchTasks = async () => {\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulated delay\n      const mockTasksData = [\n        { id: 1, title: 'Complete project proposal', deadline: '2025-05-25T10:00:00', priority: 'high' },\n        { id: 2, title: 'Review team submissions', deadline: '2025-05-21T15:30:00', priority: 'medium' },\n        { id: 3, title: 'Update documentation', deadline: '2025-05-28T12:00:00', priority: 'low' },\n        { id: 4, title: 'Prepare client presentation', deadline: '2025-05-19T09:00:00', priority: 'high' },\n        { id: 5, title: 'Weekly team meeting', deadline: '2025-05-22T14:00:00', priority: 'medium' },\n        { id: 6, title: 'Budget planning', deadline: '2025-05-30T16:00:00', priority: 'low' },\n        { id: 7, title: 'Stakeholder report', deadline: '2025-05-18T11:00:00', priority: 'high' },\n      ];\n      const processed = mockTasksData.map(task => ({\n        ...task,\n        urgencyScore: calculateUrgencyScore(task)\n      }));\n      setTasks(processed);\n      setLoading(false);\n    };\n    fetchTasks();\n  }, []);\n\n  const filteredTasks = tasks.filter(task => \n    priorityFilter === 'all' || task.priority === priorityFilter\n  );\n\n  const sortedTasks = filteredTasks.sort((a, b) => a.urgencyScore - b.urgencyScore);\n\n  // Prepare nodeRefs for CSSTransition\n  useEffect(() => {\n    sortedTasks.forEach(task => {\n      if (!nodeRefs.current[task.id]) {\n        nodeRefs.current[task.id] = React.createRef();\n      }\n    });\n  }, [sortedTasks]);\n\n  const isOverdue = (deadline) => new Date(deadline) < new Date();\n\n  const urgencyLabel = (score) => {\n    if (score < 0) return { label: \"Critical\", style: { color: \"red\", fontWeight: \"bold\" } };\n    if (score < 1) return { label: \"Urgent\", style: { color: \"orange\", fontWeight: \"600\" } };\n    if (score < 3) return { label: \"High\", style: { color: \"#d4a200\" } };\n    if (score < 7) return { label: \"Medium\", style: { color: \"blue\" } };\n    return { label: \"Low\", style: { color: \"green\" } };\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Task Manager Dashboard</h1>\n\n      <div className=\"filter\">\n        <label>Filter by Priority:</label>\n        <select \n          value={priorityFilter}\n          onChange={(e) => setPriorityFilter(e.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"high\">High</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"low\">Low</option>\n        </select>\n      </div>\n\n      {loading ? (\n        <div style={{ textAlign: 'center', padding: '2rem' }}>Loading tasks...</div>\n      ) : (\n        <TransitionGroup className=\"task-list\">\n          {sortedTasks.map(task => {\n            const urgency = urgencyLabel(task.urgencyScore);\n            return (\n              <CSSTransition\n                key={task.id}\n                timeout={300}\n                classNames=\"task-item\"\n                nodeRef={nodeRefs.current[task.id]}\n              >\n                <div ref={nodeRefs.current[task.id]} className=\"task-item\">\n                  <div style={{ fontWeight: 'bold', color: isOverdue(task.deadline) ? 'red' : '#333' }}>\n                    {task.title}\n                  </div>\n                  <div>Deadline: {formatDate(task.deadline)}</div>\n                  <div>Priority: {task.priority}</div>\n                  <div style={urgency.style}>Urgency: {urgency.label}</div>\n                </div>\n              </CSSTransition>\n            );\n          })}\n        </TransitionGroup>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}